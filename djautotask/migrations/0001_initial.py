# Generated by Django 2.0.5 on 2018-05-31 10:19

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('number', models.CharField(blank=True, max_length=50, null=True)),
                ('account_id', models.IntegerField(blank=True, null=True)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=250, null=True)),
                ('fax_number', models.CharField(blank=True, max_length=250, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=250, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state_identifier', models.CharField(blank=True, max_length=250, null=True)),
                ('zip', models.CharField(blank=True, max_length=250, null=True)),
                ('country', models.CharField(blank=True, max_length=250, null=True)),
                ('territory', models.CharField(blank=True, max_length=250, null=True)),
                ('website', models.CharField(blank=True, max_length=250, null=True)),
                ('market', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AutotaskBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BoardStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('budget_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('scheduled_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('account_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djautotask.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('agreement_id', models.IntegerField(blank=True, null=True)),
                ('approved', models.NullBooleanField()),
                ('budget_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('closed_by', models.CharField(blank=True, max_length=250, null=True)),
                ('closed_date_utc', models.DateTimeField(blank=True, null=True)),
                ('closed_flag', models.NullBooleanField()),
                ('customer_updated', models.BooleanField(default=False)),
                ('date_resolved_utc', models.DateTimeField(blank=True, null=True)),
                ('date_resplan_utc', models.DateTimeField(blank=True, null=True)),
                ('date_responded_utc', models.DateTimeField(blank=True, null=True)),
                ('entered_date_utc', models.DateTimeField(blank=True, null=True)),
                ('has_child_ticket', models.NullBooleanField()),
                ('impact', models.CharField(blank=True, max_length=250, null=True)),
                ('is_in_sla', models.NullBooleanField()),
                ('last_updated_utc', models.DateTimeField(blank=True, null=True)),
                ('parent_ticket_id', models.IntegerField(blank=True, null=True)),
                ('record_type', models.CharField(blank=True, choices=[('ServiceTicket', 'Service Ticket'), ('ProjectTicket', 'Project Ticket'), ('ProjectIssue', 'Project Issue')], db_index=True, max_length=250, null=True)),
                ('required_date_utc', models.DateTimeField(blank=True, null=True)),
                ('respond_mins', models.IntegerField(blank=True, null=True)),
                ('resolve_mins', models.IntegerField(blank=True, null=True)),
                ('resources', models.CharField(blank=True, max_length=250, null=True)),
                ('res_plan_mins', models.IntegerField(blank=True, null=True)),
                ('severity', models.CharField(blank=True, max_length=250, null=True)),
                ('site_name', models.CharField(blank=True, max_length=250, null=True)),
                ('source', models.CharField(blank=True, max_length=250, null=True)),
                ('sub_type', models.CharField(blank=True, max_length=250, null=True)),
                ('sub_type_item', models.CharField(blank=True, max_length=250, null=True)),
                ('summary', models.CharField(blank=True, max_length=250, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=250, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_tickets', to='djautotask.Account')),
                ('board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djautotask.AutotaskBoard')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_tickets', to='djautotask.Location')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djautotask.Member')),
            ],
            options={
                'verbose_name': 'Ticket',
                'ordering': ('summary',),
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.CreateModel(
            name='TicketCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TicketNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('created_by', models.TextField(blank=True, max_length=250, null=True)),
                ('resource_id', models.IntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=2000, null=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djautotask.Member')),
                ('ticket', models.ForeignKey(default='ticket-test', on_delete=django.db.models.deletion.CASCADE, to='djautotask.Ticket')),
            ],
            options={
                'ordering': ('-date_created', 'id'),
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='TicketPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TicketSecondaryResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='priority',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='djautotask.TicketPriority'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_tickets', to='djautotask.Project'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_tickets', to='djautotask.BoardStatus'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='team_tickets', to='djautotask.Team'),
        ),
    ]
